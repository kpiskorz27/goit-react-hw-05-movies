{"version":3,"file":"static/js/669.709635f5.chunk.js","mappings":"4LACA,QAA4B,0BAA5B,EAA6D,qBAA7D,EAAyF,qBAAzF,EAAsH,sBAAtH,EAA2L,kDAA3L,EAAoP,qBAApP,EAAgR,qBAAhR,EAAkT,2BAAlT,EAA0V,gDAA1V,EAAiZ,qBAAjZ,EAA8a,sB,aCI9a,MAyGA,EAzGeA,IAAyB,IAAxB,eAAEC,GAAgBD,EAChC,MAAOE,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,IAChCO,EAAOC,IAAYR,EAAAA,EAAAA,WAAS,GAE7BS,GAAWC,EAAAA,EAAAA,MAEXC,EAAcC,MAAOd,EAAQO,KACjC,IACE,MAAMQ,QAAahB,EAAe,mDAADiB,OACoBhB,EAAM,6CAAAgB,OAA4CT,IAEvGH,EAAiBW,EAAKE,SACtBX,GAAa,GACbK,EAAS,UAAW,CAAEO,SAAS,GAGjC,CAFE,MAAOT,GACPC,GAAS,EACX,GA8BF,OACES,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAASC,UACxBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAcC,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,QAAMH,UAAWC,EAAUG,SAhBZV,UACnBW,EAAMC,iBAEN,MAAMC,EAAOF,EAAMG,cACb5B,EAAS2B,EAAKE,SAAS7B,OAAO8B,MAEpC7B,EAAUD,GACVQ,EAAW,SACLK,EAAYb,EAAQ,GAE1B2B,EAAKI,OAAO,EAM0CT,SAAA,EAChDH,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAWW,KAAK,OAAOC,KAAK,YAC9Cd,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAkBW,KAAK,SAAQV,SAAC,cAIpDjB,GACCF,IACCA,EAAc+B,OAAS,GACtBX,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAASC,SACrBnB,EAAcgC,KAAIC,IACjBjB,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAACjB,UAAWC,EAAUiB,GAAE,WAAAtB,OAAaoB,EAAOG,IAAKjB,SACnDc,EAAOI,SAFHJ,EAAOG,SAOpBhB,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAeC,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EACXoB,QApDGC,KACjB,GAAgB,IAAZnC,EAAe,OAEnB,MAAMoC,EAAiBpC,EAAU,EACjCC,EAAWmC,GACX9B,EAAYb,EAAQ2C,EAAe,EAgDrBX,KAAK,SAAQV,SACd,UAGDH,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EACXoB,QAnDGG,KACjB,MAAMD,EAAiBpC,EAAU,EACjCC,EAAWmC,GACX9B,EAAYb,EAAQ2C,EAAe,EAiDrBX,KAAK,SAAQV,SACd,gBAMLH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAASC,SAAC,qCAE1Bb,IAAUN,KACVgB,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAUC,SAAC,0DAKxB,C","sources":["webpack://react-homework-template/./src/pages-styles/Movies.module.css?070a","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__5agh3\",\"main\":\"Movies_main__ud9w0\",\"form\":\"Movies_form__a6uP0\",\"input\":\"Movies_input__PCCAR\",\"button\":\"Movies_button__rXFnr\",\"buttonSubmit\":\"Movies_buttonSubmit__CfP1L Movies_button__rXFnr\",\"list\":\"Movies_list__PM-Yl\",\"link\":\"Movies_link__r4VOG\",\"pagination\":\"Movies_pagination__DP+QV\",\"buttonPage\":\"Movies_buttonPage__6FrtI Movies_button__rXFnr\",\"info\":\"Movies_info__884km\",\"error\":\"Movies_error__gMlTD\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport css from '../pages-styles/Movies.module.css';\n\nconst Movies = ({ handleFetching }) => {\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n  const [pageNum, setPageNum] = useState(1);\n  const [error, setError] = useState(false);\n\n  const navigate = useNavigate();\n\n  const showResults = async (search, pageNum) => {\n    try {\n      const data = await handleFetching(\n        `https://api.themoviedb.org/3/search/movie?query=${search}&include_adult=false&language=en-US&page=${pageNum}`\n      );\n      setSearchResults(data.results);\n      setSubmitted(true);\n      navigate(`/movies`, { replace: true });\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  const handleBack = () => {\n    if (pageNum === 1) return;\n\n    const updatedPageNum = pageNum - 1;\n    setPageNum(updatedPageNum);\n    showResults(search, updatedPageNum);\n  };\n\n  const handleNext = () => {\n    const updatedPageNum = pageNum + 1;\n    setPageNum(updatedPageNum);\n    showResults(search, updatedPageNum);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const search = form.elements.search.value;\n\n    setSearch(search);\n    setPageNum(1);\n    await showResults(search, 1);\n\n    form.reset();\n  };\n\n  return (\n    <main className={css.main}>\n      <div className={css.container}>\n        <form className={css.form} onSubmit={handleSubmit}>\n          <input className={css.input} type=\"text\" name=\"search\" />\n          <button className={css.buttonSubmit} type=\"submit\">\n            Search\n          </button>\n        </form>\n        {submitted &&\n          searchResults &&\n          (searchResults.length > 0 ? (\n            <div>\n              <ul className={css.list}>\n                {searchResults.map(result => (\n                  <li key={result.id}>\n                    <Link className={css.link} to={`/movies/${result.id}`}>\n                      {result.title}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              <div className={css.pagination}>\n                <button\n                  className={css.buttonPage}\n                  onClick={handleBack}\n                  type=\"button\"\n                >\n                  Back\n                </button>\n                <button\n                  className={css.buttonPage}\n                  onClick={handleNext}\n                  type=\"button\"\n                >\n                  Next\n                </button>\n              </div>\n            </div>\n          ) : (\n            <p className={css.info}>There are no matching results.</p>\n          ))}\n        {(error || !searchResults) && (\n          <p className={css.error}>\n            Error: Failed to get information from the server.\n          </p>\n        )}\n      </div>\n    </main>\n  );\n};\n\nMovies.propTypes = {\n  handleFetching: PropTypes.func.isRequired,\n};\n\nexport default Movies;\n"],"names":["_ref","handleFetching","search","setSearch","useState","searchResults","setSearchResults","submitted","setSubmitted","pageNum","setPageNum","error","setError","navigate","useNavigate","showResults","async","data","concat","results","replace","_jsx","className","css","children","_jsxs","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","type","name","length","map","result","Link","to","id","title","onClick","handleBack","updatedPageNum","handleNext"],"sourceRoot":""}